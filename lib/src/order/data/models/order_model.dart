import 'dart:convert';

import 'package:bigsizeship_mobile/core/utils/typedef.dart';
import 'package:bigsizeship_mobile/src/authentication/domain/entities/user.dart';
import 'package:bigsizeship_mobile/src/order/data/models/carrier_model.dart';
import 'package:bigsizeship_mobile/src/order/domain/entities/carrier.dart';
import 'package:bigsizeship_mobile/src/order/domain/entities/order.dart';

class OrderModel extends Order {
  const OrderModel({
    required super.id,
    required super.trackingId,
    required super.status,
    required super.isPartialReturned,
    required super.isReconciled,
    super.cashOnDelivery,
    super.cashOnDeliveryFee,
    super.createdAt,
    super.updatedAt,
    super.endDate,
    super.merchantOrderNumber,
    super.customer,
    super.productName,
    super.parcelValue,
    super.height,
    super.length,
    super.weight,
    super.width,
    super.deliveryInstructions,
    super.fromName,
    super.fromPhoneNumber,
    super.fromAddress,
    super.fromDistrict,
    super.fromDistrictCode,
    super.fromProvince,
    super.fromProvinceCode,
    super.fromWard,
    super.fromWardCode,
    super.toName,
    super.toPhoneNumber,
    super.toAddress,
    super.toDistrict,
    super.toDistrictCode,
    super.toProvince,
    super.toProvinceCode,
    super.toWard,
    super.toWardCode,
    super.insuranceFee,
    super.changeFee,
    super.shipmentFee,
    super.otherFee,
    super.carrier,
  });

  factory OrderModel.fromJson(String source) =>
      OrderModel.fromMap(jsonDecode(source) as DataMap);

  OrderModel.fromMap(DataMap map)
      : this(
          id: map['id'] as int,
          trackingId: map['tracking_id'] as String,
          status: map['status'] as String,
          cashOnDelivery: map['cash_on_delivery']?.toDouble() as double? ?? 0.0,
          cashOnDeliveryFee:
              map['cash_on_delivery_fee']?.toDouble() as double? ?? 0.0,
          isPartialReturned: map['is_partial_returned'] as bool,
          isReconciled: map['is_reconciled'] as bool,
          createdAt: map['createdAt'] as String?,
          updatedAt: map['updatedAt'] as String?,
          endDate: map['end_date'] as String?,
          merchantOrderNumber: map['merchant_order_number'] as String?,
          // customer: map['customer'] != null
          //     ? UserModel.fromMap(map['customer'] as DataMap)
          //     : null,
          productName: map['product_name'] as String?,
          parcelValue: map['parcel_value']?.toDouble() as double? ?? 0.0,
          height: map['height']?.toDouble() as double? ?? 0.0,
          length: map['length']?.toDouble() as double? ?? 0.0,
          weight: map['weight']?.toDouble() as double? ?? 0.0,
          width: map['width']?.toDouble() as double? ?? 0.0,
          deliveryInstructions: map['delivery_instructions'] as String?,
          fromName: map['from_name'] as String?,
          fromPhoneNumber: map['from_phone_number'] as String?,
          fromAddress: map['from_address'] as String?,
          fromDistrict: map['from_district'] as String?,
          fromDistrictCode: map['from_district_code'] as String?,
          fromProvince: map['from_province'] as String?,
          fromProvinceCode: map['from_province_code'] as String?,
          fromWard: map['from_ward'] as String?,
          fromWardCode: map['from_ward_code'] as String?,
          toName: map['to_name'] as String?,
          toPhoneNumber: map['to_phone_number'] as String?,
          toAddress: map['to_address'] as String?,
          toDistrict: map['to_district'] as String?,
          toDistrictCode: map['to_district_code'] as String?,
          toProvince: map['to_province'] as String?,
          toProvinceCode: map['to_province_code'] as String?,
          toWard: map['to_ward'] as String?,
          toWardCode: map['to_ward_code'] as String?,
          insuranceFee: map['insurance_fee']?.toDouble() as double? ?? 0.0,
          changeFee: map['change_fee']?.toDouble() as double? ?? 0.0,
          shipmentFee: map['shipment_fee']?.toDouble() as double? ?? 0.0,
          otherFee: map['other_fee']?.toDouble() as double? ?? 0.0,
          carrier: map['carrier'] != null
              ? CarrierModel.fromJson(jsonEncode(map['carrier']))
              : null,
        );

  OrderModel copyWith({
    int? id,
    String? trackingId,
    String? status,
    double? cashOnDelivery,
    double? cashOnDeliveryFee,
    double? insuranceFee,
    double? changeFee,
    double? shipmentFee,
    double? otherFee,
    String? fromAddress,
    String? fromDistrict,
    String? fromDistrictCode,
    String? fromProvince,
    String? fromProvinceCode,
    String? fromWard,
    String? fromWardCode,
    String? fromName,
    String? fromPhoneNumber,
    String? toName,
    String? toPhoneNumber,
    String? toAddress,
    String? toDistrict,
    String? toDistrictCode,
    String? toProvince,
    String? toProvinceCode,
    String? toWard,
    String? toWardCode,
    double? height,
    double? length,
    double? weight,
    double? width,
    String? deliveryInstructions,
    User? customer,
    bool? isPartialReturned,
    bool? isReconciled,
    String? merchantOrderNumber,
    String? createdAt,
    String? updatedAt,
    String? endDate,
    String? productName,
    double? parcelValue,
    Carrier? carrier,
  }) {
    return OrderModel(
      id: id ?? this.id,
      trackingId: trackingId ?? this.trackingId,
      status: status ?? this.status,
      isPartialReturned: isPartialReturned ?? this.isPartialReturned,
      isReconciled: isReconciled ?? this.isReconciled,
      cashOnDelivery: cashOnDelivery ?? this.cashOnDelivery,
      cashOnDeliveryFee: cashOnDeliveryFee ?? this.cashOnDeliveryFee,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      endDate: endDate ?? this.endDate,
      merchantOrderNumber: merchantOrderNumber ?? this.merchantOrderNumber,
      customer: customer ?? this.customer,
      productName: productName ?? this.productName,
      parcelValue: parcelValue ?? this.parcelValue,
      height: height ?? this.height,
      length: length ?? this.length,
      weight: weight ?? this.weight,
      width: width ?? this.width,
      deliveryInstructions: deliveryInstructions ?? this.deliveryInstructions,
      fromName: fromName ?? this.fromName,
      fromPhoneNumber: fromPhoneNumber ?? this.fromPhoneNumber,
      fromAddress: fromAddress ?? this.fromAddress,
      fromDistrict: fromDistrict ?? this.fromDistrict,
      fromDistrictCode: fromDistrictCode ?? this.fromDistrictCode,
      fromProvince: fromProvince ?? this.fromProvince,
      fromProvinceCode: fromProvinceCode ?? this.fromProvinceCode,
      fromWard: fromWard ?? this.fromWard,
      fromWardCode: fromWardCode ?? this.fromWardCode,
      toName: toName ?? this.toName,
      toPhoneNumber: toPhoneNumber ?? this.toPhoneNumber,
      toAddress: toAddress ?? this.toAddress,
      toDistrict: toDistrict ?? this.toDistrict,
      toDistrictCode: toDistrictCode ?? this.toDistrictCode,
      toProvince: toProvince ?? this.toProvince,
      toProvinceCode: toProvinceCode ?? this.toProvinceCode,
      toWard: toWard ?? this.toWard,
      toWardCode: toWardCode ?? this.toWardCode,
      insuranceFee: insuranceFee ?? this.insuranceFee,
      changeFee: changeFee ?? this.changeFee,
      shipmentFee: shipmentFee ?? this.shipmentFee,
      otherFee: otherFee ?? this.otherFee,
      carrier: carrier ?? this.carrier,
    );
  }

  DataMap toMap() => {
        'id': id,
      };

  String toJson() => jsonEncode(toMap());
}
